name: Reusable - Terraform Apply

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: string
    secrets:
      gcp_project_id:
        required: true
      gcp_bucket:
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    # Set Terraform environment variables from GitHub Actions inputs and secrets.
    # Terraform automatically maps environment variables prefixed with TF_VAR_
    # to corresponding variables in your Terraform code.
    # This allows dynamic, per-environment Terraform runs without modifying .tfvars files.
    env:
      TF_VAR_environment: ${{ inputs.environment }}
      TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_gcp_bucket: ${{ secrets.gcp_bucket }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Auth gcloud
        uses: google-github-actions/auth@v3
        with:
          project_id: ${{ secrets.gcp_project_id }}
          service_account: "infra-automation-global@${{ secrets.gcp_project_id }}.iam.gserviceaccount.com"
          workload_identity_provider: "projects/644009734493/locations/global/workloadIdentityPools/github/providers/github-repo-provider"

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.gcp_bucket }}" \
            -backend-config="prefix=${{ inputs.environment }}"

      - name: Terraform Format
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: terraform
        if: |
          (github.ref == 'refs/heads/main' && github.event_name == 'push' && inputs.environment == 'dev') ||
          (github.event_name == 'workflow_dispatch' && inputs.environment != 'dev')
        run: terraform apply -auto-approve -input=false
